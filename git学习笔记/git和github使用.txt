github官网https://github.com

git工具
　　
　　不同系统，方式不同
　　
　　windows
　　
　　官网下载
　　
　　可视化
　　
　　命令行(推荐)


github使用时需要先注册账户

1.创建一个仓库

　　建立一个库
　　
　　drag
　　
　　git  clone  [url]

	仓库名称---------什么项目就写什么

	描述----描述项目

	私有-----公司使用比较多，需要花钱

	共有-----任何人都可以通过连接都可以访问

	创建README文件----------对于项目描述的

	不去操作哪些文件   是否添加许可---------比如angle jq有什么开源项目许可之类的

	点击确定---------创建完毕

2.克隆创建的项目到本地 get  clone 后面是github上项目的地址

具体git sheel代码如下

　　C:\Users\user\Documents\GitHub [master +4 ~0 -0 !]> cd e:  进入e盘
　　
　　E:\> cd mygit 进入我的文件夹
　　
　　E:\mygit> git clone https://github.com/alingfeng/web_html.git  克隆
　　
　　Cloning into 'web_html'...
　　
　　remote: Counting objects: 3, done.
　　
　　remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 3
　　
　　Unpacking objects: 100% (3/3), done.
　　
　　Checking connectivity... done.
　　
　　E:\mygit>  此时克隆成功

克隆成功后就可以看见文件里面github上面创建的文件 还有一个.git 是做版本控制的，轻易不要改动里面的文件


3.设置贡献者--------在开放当中你修改了代码，你就是贡献者

	需要你的用户名和邮箱-----这样别人在开发的时候就知道上一个是代码是谁开发的和修改的

	git的邮箱和用户名最好和github上面的邮箱和用户名一样，因为多人协作开发的时候，代码的获取和提交时通过github，

	当下载到本地的时候，别人就会知道是谁开发的，开发的具体信息等等，加入不一样，那么git以一个用户名和邮箱，github又是另外一个

	这样看起来就比较费劲，不知道是谁修改和开发的


	（1）首先需要进入你项目的文件夹，这时候在里面开发的内容和文件才会被版本所控制

	就是.git文件和你要开发的文件在一个目录下

	　　E:\mygit> cd web_html
　　
　　	    E:\mygit\web_html [master ≡]>

（2）
　　设置贡献者
　　
　　name
　　
　　email
　　
　　git config --global  user.name
　　
　　git config --global user.email
　　
　　git config --list
　　
　　查看所有配置项

　　E:\mygit\web_html [master ≡]>  git  config  --global  user.name  "aling_feng"
　　
　　E:\mygit\web_html [master ≡]>  git config  --global  user.email "1429365245@qq.com"
　　
　　E:\mygit\web_html [master ≡]>  如果设置完回车没有提示说明设置成功

此时邮箱和账号就记录在版本控制

	查看某一个  git config --global user.email

　　E:\mygit\web_html [master ≡]>  git config --global user.email
　　
　　1429365245@qq.com
　　
　　E:\mygit\web_html [master ≡]>

	查看所有设置   git config --list
-------------------------------------------------------
	　　E:\mygit\web_html [master ≡]>  git config --list
　　
　　alias.c=commit
　　
　　alias.co=checkout
　　
　　alias.dt=difftool
　　
　　alias.mt=mergetool
　　
　　alias.praise=blame
　　
　　alias.ff=merge --ff-only
　　
　　alias.st=status
　　
　　alias.sync=!git pull && git push
　　
　　apply.whitespace=nowarn
　　
　　core.symlinks=false
　　
　　core.autocrlf=true
　　
　　core.editor=gitpad
　　
　　core.preloadindex=true
　　
　　core.fscache=true
　　
　　color.diff=auto
　　
　　color.status=auto
　　
　　color.branch=auto
　　
　　color.interactive=true
　　
　　color.ui=true
　　
　　pack.packsizelimit=2g
　　
　　help.format=html
　　
　　http.sslcainfo=/ssl/certs/ca-bundle-ghfw.crt
　　
　　diff.astextplain.textconv=astextplain
　　
　　rebase.autosquash=true
　　
　　credential.helper=!github --credentials
　　
　　filter.ghcleansmudge.clean=cat
　　
　　filter.ghcleansmudge.smudge=cat
　　
　　push.default=upstream
　　
　　diff.tool=vs2013
　　
　　diff.algorithm=histogram
　　
　　difftool.prompt=false
　　
　　difftool.bc4.cmd="c:/program files (x86)/beyond compare 3/bcomp.exe" "$LOCAL" "$REMOTE"
　　
　　difftool.p4.cmd="c:/program files/Perforce/p4merge.exe" "$LOCAL" "$REMOTE"
　　
　　difftool.vs2012.cmd="c:/program files (x86)/microsoft visual studio 11.0/common7/ide/devenv.exe" '//diff' "$LOCAL" "$REMOTE"
　　
　　difftool.vs2013.cmd="c:/program files (x86)/microsoft visual studio 12.0/common7/ide/devenv.exe" '//diff' "$LOCAL" "$REMOTE"
　　
　　merge.tool=bc3
　　
　　mergetool.prompt=false
　　
　　mergetool.keepbackup=false
　　
　　mergetool.bc3.cmd="c:/program files (x86)/beyond compare 3/bcomp.exe" "$LOCAL" "$REMOTE" "$BASE" "$MERGED"
　　
　　mergetool.bc3.trustexitcode=true
　　
　　mergetool.p4.cmd="c:/program files/Perforce/p4merge.exe" "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
　　
　　mergetool.p4.trustexitcode=false
　　
　　user.name=aling_feng
　　
　　user.email=1429365245@qq.com
　　
　　core.repositoryformatversion=0
　　
　　core.filemode=false
　　
　　core.bare=false
　　
　　core.logallrefupdates=true
　　
　　core.symlinks=false
　　
　　core.ignorecase=true
　　
　　core.hidedotfiles=dotGitOnly
　　
　　remote.origin.url=https://github.com/alingfeng/web_html.git
　　
　　remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
　　
　　branch.master.remote=origin
　　
　　branch.master.merge=refs/heads/master
　　
　　E:\mygit\web_html [master ≡]>
